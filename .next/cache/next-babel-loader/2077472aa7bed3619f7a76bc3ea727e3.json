{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/niklas/dev/doku/pages/[pageId].tsx\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { NotionRenderer } from \"react-notion\";\nimport Head from \"next/head\";\n\nvar NotionPage = function NotionPage(_ref) {\n  var _blockMap$Object$keys;\n\n  var blockMap = _ref.blockMap;\n\n  if (!blockMap || Object.keys(blockMap).length === 0) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"No data found.\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \" Make sure the pageId is valid.\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Only public pages are supported in this example.\"));\n  }\n\n  var title = (_blockMap$Object$keys = blockMap[Object.keys(blockMap)[0]]) === null || _blockMap$Object$keys === void 0 ? void 0 : _blockMap$Object$keys.value.properties.title[0][0];\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-1298905063\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, title)), __jsx(NotionRenderer, {\n    blockMap: blockMap,\n    fullPage: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"1298905063\",\n    __self: _this\n  }, \"div .notion-code{box-sizing:border-box;}body{padding:0;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9uaWtsYXMvZGV2L2Rva3UvcGFnZXMvW3BhZ2VJZF0udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJDeUIsQUFHaUMsQUFHWixVQUNELFNBQ1gsR0FKQSIsImZpbGUiOiIvVXNlcnMvbmlrbGFzL2Rldi9kb2t1L3BhZ2VzL1twYWdlSWRdLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIiAgXG5pbXBvcnQgeyBOb3Rpb25SZW5kZXJlciwgQmxvY2tNYXBUeXBlIH0gZnJvbSBcInJlYWN0LW5vdGlvblwiO1xuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IGZldGNoIGZyb20gXCJub2RlLWZldGNoXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJTaWRlUHJvcHMoY29udGV4dCkge1xuICBjb25zdCBwYWdlSWQgPSBjb250ZXh0LnBhcmFtcz8ucGFnZUlkO1xuXG4gIGlmICghcGFnZUlkKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgZGF0YTogQmxvY2tNYXBUeXBlID0gYXdhaXQgZmV0Y2goXG4gICAgYGh0dHBzOi8vbm90aW9uLWFwaS5zcGxpdGJlZS5pby92MS9wYWdlLyR7cGFnZUlkfWBcbiAgKS50aGVuKHJlcyA9PiByZXMuanNvbigpKTtcblxuICByZXR1cm4ge1xuICAgIHByb3BzOiB7XG4gICAgICBibG9ja01hcDogZGF0YVxuICAgIH1cbiAgfTtcbn1cblxuY29uc3QgTm90aW9uUGFnZSA9ICh7IGJsb2NrTWFwIH0pID0+IHtcbiAgaWYgKCFibG9ja01hcCB8fCBPYmplY3Qua2V5cyhibG9ja01hcCkubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxoMz5ObyBkYXRhIGZvdW5kLjwvaDM+XG4gICAgICAgIDxkaXY+IE1ha2Ugc3VyZSB0aGUgcGFnZUlkIGlzIHZhbGlkLjwvZGl2PlxuICAgICAgICA8ZGl2Pk9ubHkgcHVibGljIHBhZ2VzIGFyZSBzdXBwb3J0ZWQgaW4gdGhpcyBleGFtcGxlLjwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0IHRpdGxlID1cbiAgICBibG9ja01hcFtPYmplY3Qua2V5cyhibG9ja01hcClbMF1dPy52YWx1ZS5wcm9wZXJ0aWVzLnRpdGxlWzBdWzBdO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+e3RpdGxlfTwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8Tm90aW9uUmVuZGVyZXIgYmxvY2tNYXA9e2Jsb2NrTWFwfSBmdWxsUGFnZSAvPlxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgZGl2IDpnbG9iYWwoLm5vdGlvbi1jb2RlKSB7XG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgfVxuICAgICAgICBib2R5IHtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTm90aW9uUGFnZTsiXX0= */\\n/*@ sourceURL=/Users/niklas/dev/doku/pages/[pageId].tsx */\"));\n};\n\nexport var __N_SSP = true;\nexport default NotionPage;","map":{"version":3,"sources":["/Users/niklas/dev/doku/pages/[pageId].tsx"],"names":["NotionRenderer","Head","NotionPage","blockMap","Object","keys","length","title","value","properties"],"mappings":";;;;;;AACA,SAASA,cAAT,QAA6C,cAA7C;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAqBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACnC,MAAI,CAACA,QAAD,IAAaC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,KAAiC,CAAlD,EAAqD;AACnD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAHF,CADF;AAOD;;AAED,MAAMC,KAAK,4BACTJ,QAAQ,CAACC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsB,CAAtB,CAAD,CADC,0DACT,sBAAoCK,KAApC,CAA0CC,UAA1C,CAAqDF,KAArD,CAA2D,CAA3D,EAA8D,CAA9D,CADF;AAGA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CADF,CADF,EAIE,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEJ,QAA1B;AAAoC,IAAA,QAAQ,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF;AAAA;AAAA;AAAA,2lEADF;AAiBD,CA/BD;;;AAiCA,eAAeD,UAAf","sourcesContent":["  \nimport { NotionRenderer, BlockMapType } from \"react-notion\";\nimport Head from \"next/head\";\nimport fetch from \"node-fetch\";\n\nexport async function getServerSideProps(context) {\n  const pageId = context.params?.pageId;\n\n  if (!pageId) {\n    return;\n  }\n\n  const data: BlockMapType = await fetch(\n    `https://notion-api.splitbee.io/v1/page/${pageId}`\n  ).then(res => res.json());\n\n  return {\n    props: {\n      blockMap: data\n    }\n  };\n}\n\nconst NotionPage = ({ blockMap }) => {\n  if (!blockMap || Object.keys(blockMap).length === 0) {\n    return (\n      <div>\n        <h3>No data found.</h3>\n        <div> Make sure the pageId is valid.</div>\n        <div>Only public pages are supported in this example.</div>\n      </div>\n    );\n  }\n\n  const title =\n    blockMap[Object.keys(blockMap)[0]]?.value.properties.title[0][0];\n\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n      </Head>\n      <NotionRenderer blockMap={blockMap} fullPage />\n      <style jsx global>{`\n        div :global(.notion-code) {\n          box-sizing: border-box;\n        }\n        body {\n          padding: 0;\n          margin: 0;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default NotionPage;"]},"metadata":{},"sourceType":"module"}