{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/niklas/dev/doku/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport \"../styles/index.scss\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport React from \"react\";\nimport sal from \"sal.js\"; // export const useIntersect = ({ root = null, rootMargin, threshold = 0}) => {\n//   const [entry, updateEntry] = React.useState({});\n//   const [node, setNode] = React.useState(null);\n//   const observer = React.useRef(null);\n//   React.useEffect(\n//     () => {\n//       if (observer.current) observer.current.disconnect();\n//       observer.current = new window.IntersectionObserver(\n//         ([entry]) => updateEntry(entry),\n//         {\n//           root,\n//           rootMargin,\n//           threshold\n//         }\n//       );\n//       const { current: currentObserver} = observer;\n//       if (node) currentObserver.observe(node);\n//       return () => currentObserver.disconnect();\n//     },\n//     [node, root, rootMargin, threshold]\n//   );\n//   return [setNode, entry];\n// };\n\nexport default function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  React.useEffect(function () {\n    console.log(\"effect\");\n    sal();\n  });\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/niklas/dev/doku/pages/_app.tsx"],"names":["React","sal","App","Component","pageProps","useEffect","console","log"],"mappings":";;;AAAA,OAAO,sBAAP;AACA,OAAO,mCAAP;AACA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAIA,eAAe,SAASC,GAAT,OAAuC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACpDJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,YAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAN,IAAAA,GAAG;AACJ,GAHD;AAKA,SACE,MAAC,SAAD,eAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD","sourcesContent":["import \"../styles/index.scss\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport React, { useEffect } from \"react\";\nimport sal from \"sal.js\";\n\n// export const useIntersect = ({ root = null, rootMargin, threshold = 0}) => {\n//   const [entry, updateEntry] = React.useState({});\n//   const [node, setNode] = React.useState(null);\n\n//   const observer = React.useRef(null);\n\n//   React.useEffect(\n//     () => {\n//       if (observer.current) observer.current.disconnect();\n\n//       observer.current = new window.IntersectionObserver(\n//         ([entry]) => updateEntry(entry),\n//         {\n//           root,\n//           rootMargin,\n//           threshold\n//         }\n//       );\n\n//       const { current: currentObserver} = observer;\n\n//       if (node) currentObserver.observe(node);\n\n//       return () => currentObserver.disconnect();\n//     },\n//     [node, root, rootMargin, threshold]\n//   );\n\n//   return [setNode, entry];\n// };\n\n\n\nexport default function App({ Component, pageProps }) {\n  React.useEffect(() => {\n    console.log(\"effect\");\n    sal();\n  });\n\n  return (\n    <Component {...pageProps} />\n  );\n}"]},"metadata":{},"sourceType":"module"}