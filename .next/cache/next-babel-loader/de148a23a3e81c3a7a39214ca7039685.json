{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/niklas/dev/doku/pages/[pageId].tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { NotionRenderer } from \"react-notion\";\nimport { DOC_TITLE } from \"../lib/constants\";\nimport Container from \"../components/container\";\nimport Head from \"next/head\";\nimport Layout from \"../components/layout\";\n\nvar NotionPage = function NotionPage(_ref) {\n  var _blockMap$Object$keys;\n\n  var blockMap = _ref.blockMap;\n\n  if (!blockMap || Object.keys(blockMap).length === 0) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"No data found.\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \" Make sure the pageId is valid.\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Only public pages are supported in this example.\"));\n  }\n\n  var title = (_blockMap$Object$keys = blockMap[Object.keys(blockMap)[0]]) === null || _blockMap$Object$keys === void 0 ? void 0 : _blockMap$Object$keys.value.properties.title[0][0];\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, title, \" \\u2013 \", DOC_TITLE)), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(NotionRenderer, {\n    blockMap: blockMap,\n    fullPage: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport var __N_SSP = true;\nexport default NotionPage;","map":{"version":3,"sources":["/Users/niklas/dev/doku/pages/[pageId].tsx"],"names":["NotionRenderer","DOC_TITLE","Container","Head","Layout","NotionPage","blockMap","Object","keys","length","title","value","properties"],"mappings":";;;;;AACA,SAASA,cAAT,QAA6C,cAA7C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAqBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACnC,MAAI,CAACA,QAAD,IAAaC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,KAAiC,CAAlD,EAAqD;AACnD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAHF,CADF;AAOD;;AAED,MAAMC,KAAK,4BACTJ,QAAQ,CAACC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsB,CAAtB,CAAD,CADC,0DACT,sBAAoCK,KAApC,CAA0CC,UAA1C,CAAqDF,KAArD,CAA2D,CAA3D,EAA8D,CAA9D,CADF;AAGA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,cAAmBT,SAAnB,CADF,CADF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEK,QAA1B;AAAoC,IAAA,QAAQ,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD,CAxBD;;;AA0BA,eAAeD,UAAf","sourcesContent":["  \nimport { NotionRenderer, BlockMapType } from \"react-notion\";\nimport { DOC_TITLE } from \"../lib/constants\";\nimport Container from \"../components/container\";\nimport Head from \"next/head\";\nimport Layout from \"../components/layout\";\nimport fetch from \"node-fetch\";\n\nexport async function getServerSideProps(context) {\n  const pageId = context.params?.pageId;\n\n  if (!pageId) {\n    return;\n  }\n\n  const data: BlockMapType = await fetch(\n    `https://notion-api.splitbee.io/v1/page/${pageId}`\n  ).then(res => res.json());\n\n  return {\n    props: {\n      blockMap: data\n    }\n  };\n}\n\nconst NotionPage = ({ blockMap }) => {\n  if (!blockMap || Object.keys(blockMap).length === 0) {\n    return (\n      <div>\n        <h3>No data found.</h3>\n        <div> Make sure the pageId is valid.</div>\n        <div>Only public pages are supported in this example.</div>\n      </div>\n    );\n  }\n\n  const title =\n    blockMap[Object.keys(blockMap)[0]]?.value.properties.title[0][0];\n\n  return (\n    <Layout>\n      <Head>\n        <title>{title} â€“ { DOC_TITLE }</title>\n      </Head>\n      <Container>\n        <NotionRenderer blockMap={blockMap} fullPage />\n      </Container>\n    </Layout>\n  );\n};\n\nexport default NotionPage;"]},"metadata":{},"sourceType":"module"}