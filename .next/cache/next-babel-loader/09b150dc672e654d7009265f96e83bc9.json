{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/niklas/dev/doku/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport \"../styles/index.scss\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport React from \"react\";\nexport var useIntersect = function useIntersect(_ref) {\n  var _ref$root = _ref.root,\n      root = _ref$root === void 0 ? null : _ref$root,\n      rootMargin = _ref.rootMargin,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? 0 : _ref$threshold;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      entry = _React$useState2[0],\n      updateEntry = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      node = _React$useState4[0],\n      setNode = _React$useState4[1];\n\n  var observer = React.useRef(null);\n  React.useEffect(function () {\n    if (observer.current) observer.current.disconnect();\n    observer.current = new window.IntersectionObserver(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 1),\n          entry = _ref3[0];\n\n      return updateEntry(entry);\n    }, {\n      root: root,\n      rootMargin: rootMargin,\n      threshold: threshold\n    });\n    var currentObserver = observer.current;\n    if (node) currentObserver.observe(node);\n    return function () {\n      return currentObserver.disconnect();\n    };\n  }, [node, root, rootMargin, threshold]);\n  return [setNode, entry];\n};\nexport default function App(_ref4) {\n  var Component = _ref4.Component,\n      pageProps = _ref4.pageProps;\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }));\n}\nvar animationSelectors = ['#ID-to-animate', '.class-to-animate'];\n\nvar animChecker = function animChecker(target) {\n  // Loop over our selectors\n  animationSelectors.forEach(function (selector) {\n    // Loop over all matching DOM elements for that selector\n    target.querySelectorAll(selector).forEach(function (element) {\n      var elementTop = element.getBoundingClientRect().top;\n\n      if (elementTop < bodyHeight) {\n        element.classList.add('scrolled-to');\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/Users/niklas/dev/doku/pages/_app.tsx"],"names":["React","useIntersect","root","rootMargin","threshold","useState","entry","updateEntry","node","setNode","observer","useRef","useEffect","current","disconnect","window","IntersectionObserver","currentObserver","observe","App","Component","pageProps","animationSelectors","animChecker","target","forEach","selector","querySelectorAll","element","elementTop","getBoundingClientRect","top","bodyHeight","classList","add"],"mappings":";;;;AAAA,OAAO,sBAAP;AACA,OAAO,mCAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA+C;AAAA,uBAA5CC,IAA4C;AAAA,MAA5CA,IAA4C,0BAArC,IAAqC;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,4BAAnBC,SAAmB;AAAA,MAAnBA,SAAmB,+BAAP,CAAO;;AAAA,wBAC5CJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAD4C;AAAA;AAAA,MAClEC,KADkE;AAAA,MAC3DC,WAD2D;;AAAA,yBAEjDP,KAAK,CAACK,QAAN,CAAe,IAAf,CAFiD;AAAA;AAAA,MAElEG,IAFkE;AAAA,MAE5DC,OAF4D;;AAIzE,MAAMC,QAAQ,GAAGV,KAAK,CAACW,MAAN,CAAa,IAAb,CAAjB;AAEAX,EAAAA,KAAK,CAACY,SAAN,CACE,YAAM;AACJ,QAAIF,QAAQ,CAACG,OAAb,EAAsBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AAEtBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,MAAM,CAACC,oBAAX,CACjB;AAAA;AAAA,UAAEV,KAAF;;AAAA,aAAaC,WAAW,CAACD,KAAD,CAAxB;AAAA,KADiB,EAEjB;AACEJ,MAAAA,IAAI,EAAJA,IADF;AAEEC,MAAAA,UAAU,EAAVA,UAFF;AAGEC,MAAAA,SAAS,EAATA;AAHF,KAFiB,CAAnB;AAHI,QAYaa,eAZb,GAYgCP,QAZhC,CAYIG,OAZJ;AAcJ,QAAIL,IAAJ,EAAUS,eAAe,CAACC,OAAhB,CAAwBV,IAAxB;AAEV,WAAO;AAAA,aAAMS,eAAe,CAACH,UAAhB,EAAN;AAAA,KAAP;AACD,GAlBH,EAmBE,CAACN,IAAD,EAAON,IAAP,EAAaC,UAAb,EAAyBC,SAAzB,CAnBF;AAsBA,SAAO,CAACK,OAAD,EAAUH,KAAV,CAAP;AACD,CA7BM;AA+BP,eAAe,SAASa,GAAT,QAAuC;AAAA,MAAxBC,SAAwB,SAAxBA,SAAwB;AAAA,MAAbC,SAAa,SAAbA,SAAa;AAEpD,SACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD;AAED,IAAIC,kBAAkB,GAAG,CAAC,gBAAD,EAAmB,mBAAnB,CAAzB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC5B;AACAF,EAAAA,kBAAkB,CAACG,OAAnB,CAA2B,UAAAC,QAAQ,EAAI;AACnC;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwBD,QAAxB,EAAkCD,OAAlC,CAA0C,UAAAG,OAAO,EAAI;AACjD,UAAMC,UAAU,GAAGD,OAAO,CAACE,qBAAR,GAAgCC,GAAnD;;AACA,UAAIF,UAAU,GAAGG,UAAjB,EAA6B;AACxBJ,QAAAA,OAAO,CAACK,SAAR,CAAkBC,GAAlB,CAAsB,aAAtB;AACJ;AACJ,KALD;AAMH,GARD;AASH,CAXD","sourcesContent":["import \"../styles/index.scss\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport React from \"react\";\n\nexport const useIntersect = ({ root = null, rootMargin, threshold = 0}) => {\n  const [entry, updateEntry] = React.useState({});\n  const [node, setNode] = React.useState(null);\n\n  const observer = React.useRef(null);\n\n  React.useEffect(\n    () => {\n      if (observer.current) observer.current.disconnect();\n\n      observer.current = new window.IntersectionObserver(\n        ([entry]) => updateEntry(entry),\n        {\n          root,\n          rootMargin,\n          threshold\n        }\n      );\n\n      const { current: currentObserver} = observer;\n\n      if (node) currentObserver.observe(node);\n\n      return () => currentObserver.disconnect();\n    },\n    [node, root, rootMargin, threshold]\n  );\n\n  return [setNode, entry];\n};\n\nexport default function App({ Component, pageProps }) {\n\n  return (\n    <Component {...pageProps} />\n  );\n}\n\nlet animationSelectors = ['#ID-to-animate', '.class-to-animate']\n\nconst animChecker = (target) => {\n    // Loop over our selectors\n    animationSelectors.forEach(selector => {\n        // Loop over all matching DOM elements for that selector\n        target.querySelectorAll(selector).forEach(element => {\n            const elementTop = element.getBoundingClientRect().top\n            if (elementTop < bodyHeight) {\n                 element.classList.add('scrolled-to')\n            }\n        })\n    })\n}"]},"metadata":{},"sourceType":"module"}