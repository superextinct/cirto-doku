{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { NotionRenderer } from \"react-notion\";\nimport Head from \"next/head\";\nimport fetch from \"node-fetch\";\nexport async function getServerSideProps(context) {\n  var _context$params;\n\n  const pageId = (_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.pageId;\n\n  if (!pageId) {\n    return;\n  }\n\n  const data = await fetch(`https://notion-api.splitbee.io/v1/page/${pageId}`).then(res => res.json());\n  return {\n    props: {\n      blockMap: data\n    }\n  };\n}\n\nconst NotionPage = ({\n  blockMap\n}) => {\n  var _blockMap$Object$keys;\n\n  if (!blockMap || Object.keys(blockMap).length === 0) {\n    return __jsx(\"div\", null, __jsx(\"h3\", null, \"No data found.\"), __jsx(\"div\", null, \" Make sure the pageId is valid.\"), __jsx(\"div\", null, \"Only public pages are supported in this example.\"));\n  }\n\n  const title = (_blockMap$Object$keys = blockMap[Object.keys(blockMap)[0]]) === null || _blockMap$Object$keys === void 0 ? void 0 : _blockMap$Object$keys.value.properties.title[0][0];\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-1298905063\"\n  }, title)), __jsx(NotionRenderer, {\n    blockMap: blockMap,\n    fullPage: true\n  }), __jsx(_JSXStyle, {\n    id: \"1298905063\"\n  }, [\"div .notion-code{box-sizing:border-box;}\", \"body{padding:0;margin:0;}\"]));\n};\n\nexport default NotionPage;","map":null,"metadata":{},"sourceType":"module"}